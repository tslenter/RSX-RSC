#F5 connector
source f5_7000 {
    network(
        transport("udp")
        port(7000)
    );
};

#F5 destination
destination d_http_f5 {
  elasticsearch-http(
    index("f5-lan-${YEAR}-${MONTH}-${DAY}")
    type("production")
    url("http://localhost:9200/_bulk")
    persist-name("Default F5 log")
    template("$(format-json --scope rfc5424 --scope dot-nv-pairs --scope nv-pairs --key ISODATE @timestamp=${ISODATE})"));
};

#F5 parser
parser f5_msg_monitor {
    csv-parser(
        #prefix(".F5.")
        columns("F5_MCPD_ID", "F5_UNIX_TIME", "", "F5_POOL_NAME", "", "F5_MEMBER", "", "", "F5_HOST_STATUS", "F5_POOL_STATUS")
        flags(strip-whitespace,greedy)
        delimiters(chars(" "))
        quote-pairs('""')
    );
};

parser f5_vs_status {
    csv-parser(
        #prefix(".F5.")
        columns("F5_MCPD_ID", "F5_UNIX_TIME", "", "", "F5_VS_NAME", "", "", "F5_VS_STATUS")
        flags(strip-whitespace,greedy)
        delimiters(chars(" "))
        quote-pairs('""')
    );
};

parser f5_va_monitor {
    csv-parser(
        #prefix(".F5.")
        columns("F5_MCPD_ID", "F5_UNIX_TIME", "", "", "F5_VA_NAME", "", "", "", "", "", "", "F5_VA_MONITOR_STATUS")
        flags(strip-whitespace,greedy)
        delimiters(chars(" "))
        quote-pairs('""')
    );
};

#F5 config
log {
  source(f5_7000);
  if (message('monitor status up.') or message('monitor status down.')) {
      parser(f5_msg_monitor);
      destination(d_http_f5);
      flags(flow-control);
  } elif (message('SNMP_TRAP: Virtual') and message('available') or message('unavailable')) {
      parser(f5_vs_status);
      destination(d_http_f5);
      flags(flow-control);
  } elif (message('Virtual Address') and message('UP') or message('DOWN')) {
      parser(f5_va_monitor);
      destination(d_http_f5);
      flags(flow-control);
  } else {
  destination(d_http_f5);
  flags(flow-control);
  };
};
